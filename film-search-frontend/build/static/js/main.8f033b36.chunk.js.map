{"version":3,"sources":["assets/logo.svg","components/SearchBar.js","components/Header.js","services/api.js","components/Loading.js","assets/missing-image.jpg","components/MovieCard.js","components/TvCard.js","components/PersonCard.js","pages/HomePage.js","components/Genres.js","components/MoviePageDetails.js","services/functions.js","components/ProvidersList.js","components/WatchProviders.js","components/Cast.js","components/LongText.js","pages/MoviePage.js","components/TvPageDetails.js","pages/TVPage.js","components/PersonPageDetails.js","components/KnownFor.js","pages/PersonPage.js","pages/NotFoundPage.js","pages/SearchResultsPage.js","App.js","reportWebVitals.js","index.js"],"names":["SearchBar","useState","query","setQuery","history","useHistory","className","id","onSubmit","e","preventDefault","push","document","getElementById","reset","htmlFor","type","placeholder","onChange","target","value","Header","to","src","logo","alt","process","REACT_APP_TMDB_API_KEY","fetchTrendingMedia","a","fetch","res","json","data","fetchMovie","fetchTV","fetchPerson","fetchMultiSearch","Loading","MovieCard","media","smPosterPath","missingImage","poster_path","title","release_date","TvCard","name","first_air_date","PersonCard","profile_path","character","HomePage","trendingMedia","setTrendingMedia","isLoaded","setIsLoaded","useEffect","getTrendingMedia","results","map","media_type","Genres","genres","genre","MoviePageDetails","poster","runtime","certifications","cert","details","certs","filter","iso_3166_1","release_dates","forEach","element","certification","length","getCerts","ProvidersList","providers","key","logoPath","logo_path","WatchProviders","providersList","link","getWatchProviders","watchProviders","undefined","flatrate","rent","buy","Cast","cast","person","LongText","heading","text","readMore","setReadMore","slice","displayText","setDisplayText","readMoreLinkText","setReadMoreLinkText","shortText","onClick","MoviePage","movieId","match","params","movieDetails","setMovieDetails","movie","getMovieDetails","overview","credits","TvPageDetails","contentRating","numberOfSeasons","rating","TVPage","tvId","tvDetails","setTvDetails","tv","getTvDetails","content_ratings","episode_run_time","number_of_seasons","PersonPageDetails","genderNum","birthday","deathday","place_of_birth","0","1","2","3","birthParse","Date","ageDiff","getTime","ageDate","age","Math","abs","getUTCFullYear","now","birthdayCalc","KnownFor","knownFor","PersonPage","personId","personDetails","setPersonDetails","getPersonDetails","knownForByPopularity","combined_credits","sort","b","popularity","gender","biography","NotFoundPage","SearchResultsPage","searchQuery","searchResults","setSearchResults","search","getSearchResults","App","path","component","exact","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render"],"mappings":"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","file":"static/js/main.8f033b36.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.2df698b9.svg\";","// React Components\r\nimport { useState } from 'react'\r\nimport { useHistory } from \"react-router\";\r\n\r\nfunction SearchBar() {\r\n\r\n  // State\r\n  const [query, setQuery] = useState('');\r\n\r\n  // History\r\n  const history = useHistory()\r\n\r\n  // On Search Submit\r\n  const onSubmit = (e) => {\r\n    // prevent page reload\r\n    e.preventDefault()\r\n\r\n    // Do nothing if there is no query string\r\n    if(!query){\r\n      return;\r\n    }\r\n\r\n    // Redirect to search page\r\n    history.push(`/search/${query}`)\r\n\r\n    // Reset form after redirect\r\n    let form = document.getElementById(\"search-form\")\r\n    form.reset()\r\n  }\r\n\r\n  return (\r\n    <div className=\"mt-4 rounded\">\r\n      <form className=\"max-w-3xl\" id=\"search-form\" onSubmit={onSubmit}>\r\n\r\n        <label className=\"hidden\" htmlFor=\"search-input\">Search Media or Person</label>\r\n        <input id=\"search-input\" className=\"w-4/5 rounded-l pl-1 focus:outline-none\" type=\"text\" placeholder=\"Search Media or Person\" onChange={(e) => setQuery(e.target.value)}></input>\r\n\r\n        <button className=\"w-1/5 bg-green-600 text-white rounded-r\" type=\"submit\">Search</button>\r\n      </form>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default SearchBar\r\n","// React Components\r\nimport { Link } from 'react-router-dom';\r\n\r\n// Assets\r\nimport logo from '../assets/logo.svg'\r\n\r\n// Components\r\nimport SearchBar from './SearchBar'\r\n\r\nfunction Header() {\r\n  return (\r\n    <header className=\"bg-gray-800 h-24s\">\r\n      <div className=\"max-w-3xl mx-auto p-2\">\r\n        <div className=\"flex items-center\">\r\n          <div>\r\n            <Link to=\"/\">\r\n              <img className=\"inline-block mr-3 h-14\" src={logo} alt=\"logo\"/>\r\n            </Link>\r\n          </div>\r\n          <h1 className=\"text-white text-4xl\">\r\n            Film Search\r\n          </h1>\r\n        </div>\r\n        <SearchBar />\r\n      </div>\r\n    </header>\r\n  )\r\n}\r\n\r\nexport default Header\r\n","const apiKey = process.env.REACT_APP_TMDB_API_KEY;\r\n\r\n// Trending Media\r\nexport async function fetchTrendingMedia(){\r\n  const res = await fetch(`/api/trending-media`);\r\n  const data = await res.json();\r\n  return data;\r\n}\r\n\r\n// Movie\r\nexport async function fetchMovie(id){\r\n  const res = await fetch(`/api/movie/${id}`);\r\n  const data = await res.json();\r\n  return data;\r\n}\r\n\r\n// TV\r\nexport async function fetchTV(id){\r\n  const res = await fetch(`/api/tv/${id}`);\r\n  const data = await res.json();\r\n  return data;\r\n}\r\n\r\n// Person\r\nexport async function fetchPerson(id){\r\n  const res = await fetch(`/api/person/${id}`);\r\n  const data = await res.json();\r\n  return data;\r\n}\r\n\r\n// Search (Milti-Search)\r\nexport async function fetchMultiSearch(query){\r\n  const res = await fetch(`/api/search/${query}`);\r\n  const data = await res.json();\r\n  return data;\r\n}","function Loading() {\r\n  return (\r\n    <main className=\"bg-gray-600 h-screen p-6\">\r\n      <div className=\"custom-loader mx-auto pt-4\"></div>\r\n      <h2 className=\"font-bold text-center text-2xl text-green-600\">Loading...</h2>\r\n    </main>\r\n  )\r\n}\r\n\r\nexport default Loading\r\n","export default __webpack_public_path__ + \"static/media/missing-image.ffcfc7d8.jpg\";","// React Components\r\nimport { Link } from 'react-router-dom';\r\n\r\n// Missing image\r\nimport missingImage from '../assets/missing-image.jpg';\r\n\r\nfunction MovieCard({media}) {\r\n\r\n  // Check for missing image\r\n  let smPosterPath = missingImage;\r\n  if(media.poster_path){\r\n    smPosterPath = `http://image.tmdb.org/t/p/w342${media.poster_path}`;\r\n  }\r\n  \r\n  return (\r\n    <div className=\"w-40 m-2 shadow-lg rounded bg-gray-800 transition duration-150 transform hover:scale-105\">\r\n      <Link to={`/movie/${media.id}`}>\r\n        <img className=\"rounded-t\" src={smPosterPath} alt=\"\" />\r\n      </Link>\r\n      <div className=\"p-1 text-white\">\r\n        <h3 className=\"font-bold text-green-500\">{media.title}</h3>\r\n        <p>Movie</p>\r\n        <p className=\"font-light text-sm\">Release Date: {media.release_date}</p>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default MovieCard\r\n","// REACT COMPONENTS\r\nimport { Link } from \"react-router-dom\"\r\n\r\n// Missing image\r\nimport missingImage from '../assets/missing-image.jpg'\r\n\r\nfunction TvCard({media}) {\r\n\r\n  // Check for missing image\r\n  let smPosterPath = missingImage;\r\n  if(media.poster_path){\r\n    smPosterPath = `http://image.tmdb.org/t/p/w342${media.poster_path}`;\r\n  }\r\n  \r\n  return (\r\n    <div className=\"w-40 m-2 shadow-lg rounded bg-gray-800 transition duration-150 transform hover:scale-105\">\r\n      <Link to={`/tv/${media.id}`}>\r\n        <img className=\"rounded-t\" src={smPosterPath} alt=\"\" />\r\n      </Link>\r\n      <div className=\"p-1 text-white\">\r\n        <h3 className=\"font-bold text-green-500\">{media.name}</h3>\r\n        <p>TV Show</p>\r\n        <p className=\"font-light text-sm\">Release Date: {media.first_air_date}</p>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default TvCard\r\n","// REACT COMPONENTS\r\nimport { Link } from \"react-router-dom\"\r\n\r\n// Missing image\r\nimport missingImage from '../assets/missing-image.jpg';\r\n\r\nfunction PersonCard({media}) {\r\n\r\n  // Check for missing image\r\n  let smPosterPath = missingImage;\r\n  if(media.profile_path){\r\n    smPosterPath = `http://image.tmdb.org/t/p/w342${media.profile_path}`;\r\n  }\r\n\r\n  return (\r\n    <div className=\"w-40 m-2 shadow-lg rounded bg-gray-800 transition duration-150 transform hover:scale-105\">\r\n      <Link to={`/person/${media.id}`}>\r\n        <img className=\"rounded-t\" src={smPosterPath} alt=\"\" />\r\n      </Link>\r\n      <div className=\"p-1 text-white\">\r\n        <h3 className=\"font-bold text-green-500\">{media.name}</h3>\r\n        {media.character ? (\r\n          <p>{media.character}</p>\r\n        ):null}\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default PersonCard\r\n","// React Components\r\nimport { useState, useEffect } from 'react';\r\n\r\n// API\r\nimport { fetchTrendingMedia } from '../services/api';\r\n\r\n// Components\r\nimport Loading from '../components/Loading';\r\nimport MovieCard from '../components/MovieCard';\r\nimport TvCard from '../components/TvCard';\r\nimport PersonCard from '../components/PersonCard';\r\n\r\nfunction HomePage() {\r\n\r\n  // States\r\n  const [trendingMedia, setTrendingMedia] = useState([]);\r\n  const [isLoaded, setIsLoaded] = useState(false);  \r\n  \r\n  // On page load get trending media\r\n  useEffect(() => { \r\n    const getTrendingMedia = async () => {\r\n      const media = await fetchTrendingMedia();\r\n      setTrendingMedia(media);\r\n      setIsLoaded(true);\r\n    }\r\n    getTrendingMedia();\r\n  }, []);\r\n\r\n  // Render\r\n  if(!isLoaded){\r\n    return (\r\n      <Loading />\r\n    )\r\n  } else {\r\n    // console.log(trendingMedia);\r\n    const results = trendingMedia.results;\r\n    return (\r\n      <main className=\"bg-gray-600\">\r\n        <div className=\"max-w-3xl mx-auto\">\r\n          <h2 className=\"text-2xl font-bold text-green-500 text-center p-2\">Trending Media</h2>\r\n          <div className=\"p-1 flex flex-wrap justify-center\">\r\n            {/* TODO: Learn more about using conditionals in map (without return true I get a warning) */}\r\n            {results.map(media => {\r\n              if(media.media_type === \"movie\"){\r\n                return <MovieCard key={media.id} media={media} />\r\n              } else if(media.media_type === \"tv\"){\r\n                return <TvCard key={media.id} media={media} />\r\n              } else if(media.media_type === \"person\"){\r\n                return <PersonCard key={media.id} media={media} />\r\n              }\r\n              return true;\r\n            })}\r\n          </div>\r\n        </div>\r\n      </main>\r\n    )\r\n  }\r\n};\r\n\r\nexport default HomePage;\r\n","function Genres({ genres }) {\r\n  // TODO: Style genres\r\n  return (\r\n    <p className=\"text-white mt-2\">Genres:&nbsp;\r\n      {genres.map(genre => {\r\n        return genre.name + \" \";\r\n      })}\r\n    </p>\r\n  )\r\n}\r\n\r\nexport default Genres\r\n","// COMPONENTS\r\nimport Genres from \"./Genres\"\r\n\r\n// FUNCTIONS\r\nimport { getCerts } from '../services/functions'\r\n\r\n// Missing image\r\nimport missingImage from '../assets/missing-image.jpg';\r\n\r\nfunction MoviePageDetails({ poster, title, runtime, certifications, genres }) {\r\n\r\n  // Get US certifications\r\n  const cert = getCerts(certifications);\r\n\r\n  // Check for missing image\r\n  let smPosterPath = missingImage;\r\n  if(poster){\r\n    smPosterPath = `http://image.tmdb.org/t/p/w342${poster}`;\r\n  }\r\n\r\n  return (\r\n    <div className=\"p-2 flex\">\r\n      <img className=\"rounded w-44 mr-2\" src={smPosterPath} alt=\"\" />\r\n      <div>\r\n        <h2 className=\"text-xl font-bold text-green-500\">{title}</h2>\r\n        <p className=\"text-white mt-2\">Runtime: {runtime}min</p>\r\n        <p className=\"text-white mt-2\">Rating: {cert}</p>\r\n        <Genres genres={genres} />\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default MoviePageDetails\r\n","// Function to get a single certification from Movie or Tv query\r\nexport function getCerts(details){\r\n  const certs = details.results.filter(cert => cert.iso_3166_1 === 'US');\r\n  const cert = [];\r\n  if(certs[0]){\r\n    certs[0].release_dates.forEach(element => {\r\n      if(element.certification !== \"\"){\r\n        cert.push(element.certification);\r\n      };\r\n    });\r\n    if(cert.length > 0){\r\n      return cert[0];\r\n    }else{\r\n      return \"N/A\";\r\n    };\r\n  }else{\r\n    return \"N/A\";\r\n  }\r\n}\r\n\r\n// Function to check for US watch providers\r\nexport function getWatchProviders(details){\r\n  const providers = details.results;\r\n  if(providers[\"US\"]){\r\n    const providersList = providers[\"US\"];\r\n    delete providersList.link;\r\n    return providersList;\r\n  }else{\r\n    return false;\r\n  };\r\n}","function ProvidersList({ providers, type }) {\r\n  return (\r\n    <>\r\n      <h3 className=\"text-md font-bold text-white\">{type}</h3>\r\n      <div className=\"flex flex-wrap justify-start\">\r\n        {providers.map((element, key)=>{\r\n          const logoPath = `http://image.tmdb.org/t/p/w300${element.logo_path}`\r\n          return (\r\n            <div className=\"w-16 m-2\" key={key}>\r\n              <img className=\"rounded-lg\" src={logoPath} alt=\"\"></img>\r\n            </div>\r\n          );\r\n        })}\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default ProvidersList\r\n","// COMPONENTS\r\nimport ProvidersList from \"./ProvidersList\";\r\n\r\n// FUNCTIONS\r\nimport { getWatchProviders } from \"../services/functions\";\r\n\r\n// RENDER COMPONENT\r\nfunction WatchProviders({ watchProviders }) {\r\n\r\n  // Get US watch providers\r\n  const providers = getWatchProviders(watchProviders)\r\n\r\n  // If there are any US watch providers\r\n  if(providers){\r\n    return (\r\n      <div className=\"p-2\">\r\n        <h2 className=\"text-lg font-bold text-green-500 text-center\">Watch Providers</h2>\r\n\r\n        {providers.flatrate !== undefined ? (\r\n          <ProvidersList providers={providers.flatrate} type=\"Stream\" />\r\n        ):null}\r\n\r\n        {providers.rent !== undefined ? (\r\n          <ProvidersList providers={providers.rent} type=\"Rent\" />\r\n        ):null}\r\n\r\n        {providers.buy !== undefined ? (\r\n          <ProvidersList providers={providers.buy} type=\"Buy\" />\r\n        ):null}\r\n\r\n      </div>\r\n    )\r\n  } else {\r\n    return null;\r\n  }\r\n}\r\n\r\nexport default WatchProviders\r\n","import PersonCard from \"./PersonCard\"\r\n\r\nfunction Cast({ cast }) {\r\n  return (\r\n    <>\r\n      <h2 className=\"text-xl font-bold text-green-500 text-center\">Cast</h2>\r\n      <div className=\"p-2 flex flex-wrap justify-center\">\r\n        {cast.map((person, key)=>{\r\n          return <PersonCard key={key} media={person} />\r\n        })}\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Cast\r\n","// React Components\r\nimport { useState } from 'react'\r\n\r\nfunction LongText({ heading, text }) {\r\n\r\n  const [readMore, setReadMore] = useState(true)\r\n  const [displayText, setDisplayText] = useState(text.slice(0, 400) + '...')\r\n  const [readMoreLinkText, setReadMoreLinkText] = useState('Read More')\r\n\r\n  let shortText = false\r\n  if(text.length > 400){\r\n    shortText = true\r\n  }\r\n\r\n  const textSwtich = () => {\r\n    if(readMore){\r\n      setDisplayText(text)\r\n      setReadMore(!readMore)\r\n      setReadMoreLinkText('Read Less')\r\n    }\r\n    if(!readMore){\r\n      setDisplayText(text.slice(0, 400) + '...')\r\n      setReadMore(!readMore)\r\n      setReadMoreLinkText('Read More')\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"p-2\">\r\n      <h2 className=\"text-lg font-bold text-green-500 text-center\">{heading}</h2>\r\n      \r\n      <p className=\"text-white\">{shortText ? displayText : text}</p>\r\n      {\r\n        shortText ?\r\n          <div className=\"flex justify-center\">\r\n            <button\r\n              onClick={()=>textSwtich()}\r\n              className=\"bg-green-500 rounded-xl px-2 mt-1 text-sm text-gray-800 font-bold focus:outline-none\">\r\n                {readMoreLinkText}\r\n            </button>\r\n          </div>\r\n        : null\r\n      }\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default LongText\r\n","// REACT COMPONENTS\r\nimport { useState, useEffect } from 'react';\r\n\r\n// API\r\nimport { fetchMovie } from '../services/api';\r\n\r\n// COMPONENTS\r\nimport Loading from '../components/Loading';\r\nimport MoviePageDetails from '../components/MoviePageDetails';\r\nimport WatchProviders from '../components/WatchProviders';\r\nimport Cast from '../components/Cast';\r\nimport LongText from '../components/LongText'\r\n\r\n// RENDER PAGE\r\nfunction MoviePage({ match }) {\r\n  // Get movie ID from URL\r\n  const movieId = match.params.name;\r\n\r\n  // State\r\n  const [movieDetails, setMovieDetails] = useState([]);\r\n  const [isLoaded, setIsLoaded] = useState(false);\r\n\r\n  // UseEffect\r\n  useEffect(() => {\r\n    const getMovieDetails = async () => {\r\n      const movie = await fetchMovie(movieId);\r\n      setMovieDetails(movie);\r\n      setIsLoaded(true);\r\n    }\r\n    getMovieDetails();\r\n  }, [movieId]);\r\n\r\n  // Check if movie info is loaded\r\n  if(!isLoaded){\r\n    return (\r\n      <Loading />\r\n    )\r\n  // Render if movie info is loaded\r\n  } else {\r\n\r\n    return (\r\n      <main className=\"bg-gray-600\">\r\n        <div className=\"max-w-3xl mx-auto\">\r\n\r\n        <MoviePageDetails\r\n          poster={movieDetails.poster_path}\r\n          title={movieDetails.title}\r\n          runtime={movieDetails.runtime}\r\n          certifications={movieDetails.release_dates}\r\n          genres={movieDetails.genres}\r\n        />\r\n\r\n        {movieDetails.overview ? <LongText heading='Overview' text={movieDetails.overview} /> : null}\r\n\r\n        <WatchProviders watchProviders={movieDetails[\"watch/providers\"]} />\r\n\r\n        <Cast cast={movieDetails.credits.cast} />\r\n        </div>\r\n      </main>\r\n    )\r\n  }\r\n}\r\n\r\nexport default MoviePage\r\n","// Components\r\nimport Genres from \"./Genres\";\r\n\r\n// Missing image\r\nimport missingImage from '../assets/missing-image.jpg';\r\n\r\nfunction TvPageDetails({ poster, title, contentRating, runtime, numberOfSeasons, genres }) {\r\n\r\n  // Get US rating\r\n  let rating = \"N/A\"\r\n  contentRating.forEach(element => {\r\n    if(element.iso_3166_1 === \"US\"){\r\n      rating = element.rating\r\n    }\r\n  });\r\n\r\n  // Check for missing image\r\n  let smPosterPath = missingImage;\r\n  if(poster){\r\n    smPosterPath = `http://image.tmdb.org/t/p/w342${poster}`;\r\n  }\r\n\r\n  return (\r\n    <div className=\"p-2 flex\">\r\n      <img className=\"rounded w-44 mr-2\" src={smPosterPath} alt=\"\" />\r\n      <div>\r\n        <h2 className=\"text-xl font-bold text-green-500\">{title}</h2>\r\n        <p className=\"text-white mt-2\">Rating: {rating}</p>\r\n        <p className=\"text-white mt-2\">Episode Runtime: {runtime}min</p>\r\n        <p className=\"text-white mt-2\">Seasons: {numberOfSeasons}</p>\r\n        <Genres genres={genres} />\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default TvPageDetails\r\n","// REACT COMPONENTS\r\nimport { useState, useEffect } from 'react'\r\n\r\n// API\r\nimport { fetchTV } from '../services/api'\r\n\r\n// COMPONENTS\r\nimport Loading from '../components/Loading'\r\nimport TvPageDetails from '../components/TvPageDetails'\r\nimport LongText from '../components/LongText'\r\nimport WatchProviders from '../components/WatchProviders'\r\nimport Cast from '../components/Cast'\r\n\r\n// RENDER PAGE\r\nfunction TVPage({ match }) {\r\n\r\n  // Get TV id from URL\r\n  const tvId = match.params.name\r\n\r\n  // State\r\n  const [tvDetails, setTvDetails] = useState([])\r\n  const [isLoaded, setIsLoaded] = useState(false)\r\n\r\n  // UseEffect\r\n  useEffect(() => {\r\n    const getTvDetails = async () => {\r\n      const tv = await fetchTV(tvId)\r\n      setTvDetails(tv)\r\n      setIsLoaded(true)\r\n    }\r\n    getTvDetails()\r\n  }, [tvId])\r\n\r\n  // Check if TV info is loaded\r\n  if(!isLoaded){\r\n    return (\r\n      <Loading />\r\n    )\r\n  } else {\r\n    return (\r\n      <main className=\"bg-gray-600\">\r\n        <div className=\"max-w-3xl mx-auto\">\r\n\r\n          <TvPageDetails\r\n            poster={tvDetails.poster_path}\r\n            title={tvDetails.name}\r\n            contentRating={tvDetails.content_ratings.results}\r\n            runtime={tvDetails.episode_run_time}\r\n            numberOfSeasons={tvDetails.number_of_seasons}\r\n            genres={tvDetails.genres}\r\n          />\r\n\r\n          {tvDetails.overview ? <LongText heading='Overview' text={tvDetails.overview} /> : null}\r\n\r\n          <WatchProviders watchProviders={tvDetails[\"watch/providers\"]} />\r\n\r\n          <Cast cast={tvDetails.credits.cast} />\r\n          \r\n        </div>\r\n      </main>\r\n    )\r\n  }\r\n}\r\n\r\nexport default TVPage\r\n","// Missing image\r\nimport missingImage from '../assets/missing-image.jpg';\r\n\r\nfunction PersonPageDetails({ poster, name, genderNum, birthday, deathday, place_of_birth }) {\r\n\r\n  // Gender number codes\r\n  const gender = {0: 'Not Available', 1: 'Female', 2: 'Male', 3: 'Other'}\r\n\r\n  // Calculate age based on wether the person is alive or not\r\n  const birthdayCalc = (birthday, deathday) => {\r\n    const birthParse = new Date(birthday)\r\n    if(deathday !== null){\r\n      const deathParse = new Date(deathday)\r\n      const ageDiff = deathParse.getTime() - birthParse.getTime()\r\n      const ageDate = new Date(ageDiff)\r\n      const age = Math.abs(ageDate.getUTCFullYear() - 1970)\r\n      return <p className=\"text-white mt-2\">\r\n        <b>Birthday:</b><br></br>\r\n        <i>{birthday}</i><br></br>\r\n        <b>Day of Death:</b><br></br>\r\n        <i>{deathday} (age: {age})</i>\r\n      </p>\r\n    } else {\r\n      const ageDiff = Date.now() - birthParse.getTime()\r\n      const ageDate = new Date(ageDiff)\r\n      const age = Math.abs(ageDate.getUTCFullYear() - 1970)\r\n      return <p className=\"text-white mt-2\">\r\n        <b>Birthday:</b><br></br>\r\n        <i>{birthday} (age: {age})</i><br></br>\r\n      </p>\r\n    }\r\n  }\r\n\r\n  // Check for missing image\r\n  let smPosterPath = missingImage;\r\n  if(poster){\r\n    smPosterPath = `http://image.tmdb.org/t/p/w342${poster}`;\r\n  }\r\n\r\n  return (\r\n    <div className=\"p-2 flex\">\r\n      <img className=\"rounded w-44 mr-2\" src={smPosterPath} alt=\"\" />\r\n      <div>\r\n        <h2 className=\"text-xl font-bold text-green-500\">{name}</h2>\r\n        <p className=\"text-white mt-2\"><b>Gender:</b><br></br>\r\n          <i>{gender[genderNum]}</i>\r\n        </p>\r\n        {\r\n          birthday ? \r\n            birthdayCalc(birthday, deathday):\r\n            <p className=\"text-white mt-2\">\r\n              <b>Birthday:</b><br></br>\r\n              <i>Not Available</i>\r\n            </p>\r\n        }\r\n        <p className=\"text-white mt-2\"><b>Place of Birth:</b><br></br>\r\n          {\r\n            place_of_birth ?\r\n            <i>{place_of_birth}</i> :\r\n            <i>Not Available</i>\r\n          }\r\n        </p>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default PersonPageDetails\r\n","// Components\r\nimport MovieCard from \"./MovieCard\"\r\nimport TvCard from \"./TvCard\"\r\n\r\nfunction KnownFor({ knownFor }) {\r\n  return (\r\n    <>\r\n      <h2 className=\"text-xl font-bold text-green-500 text-center\">Known For</h2>\r\n      <div className=\"p-2 flex flex-wrap justify-center\">\r\n        {/* TODO: Learn more about using conditionals in map (without return true I get a warning) */}\r\n        {knownFor.map((media, key) => {\r\n          if(media.media_type === \"movie\"){\r\n            return <MovieCard key={key} media={media} />\r\n          } else if(media.media_type === \"tv\"){\r\n            return <TvCard key={key} media={media} />\r\n          }\r\n          return true;\r\n        })}\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default KnownFor\r\n","// React Components\r\nimport { useState, useEffect } from 'react'\r\n\r\n// API\r\nimport { fetchPerson } from '../services/api'\r\n\r\n// Components\r\nimport Loading from '../components/Loading'\r\nimport PersonPageDetails from '../components/PersonPageDetails'\r\nimport LongText from '../components/LongText'\r\nimport KnownFor from '../components/KnownFor'\r\n\r\nfunction PersonPage({ match }) {\r\n  // Get movie ID from URL\r\n  const personId = match.params.name\r\n\r\n  // State\r\n  const [personDetails, setPersonDetails] = useState([])\r\n  const [isLoaded, setIsLoaded] = useState(false)\r\n\r\n  // UseEffect\r\n  useEffect(() => {\r\n    const getPersonDetails = async () => {\r\n      const person = await fetchPerson(personId)\r\n      setPersonDetails(person)\r\n      setIsLoaded(true)\r\n    }\r\n    getPersonDetails()\r\n  }, [personId])\r\n\r\n  // Check if movie info is loaded\r\n  if(!isLoaded){\r\n    return (\r\n      <Loading />\r\n    )\r\n  // Render if movie info is loaded\r\n  } else {\r\n\r\n    const knownForByPopularity = personDetails.combined_credits.cast.sort((a, b) => {\r\n      return b.popularity - a.popularity\r\n    })\r\n\r\n    return (\r\n      <main className=\"bg-gray-600\">\r\n        <div className=\"max-w-3xl mx-auto\">\r\n          <PersonPageDetails\r\n            poster={personDetails.profile_path}\r\n            name={personDetails.name}\r\n            genderNum={personDetails.gender}\r\n            birthday={personDetails.birthday}\r\n            deathday={personDetails.deathday}\r\n            place_of_birth={personDetails.place_of_birth}\r\n          />\r\n\r\n          {personDetails.biography ? <LongText heading='Biography' text={personDetails.biography} /> : null}\r\n\r\n          <KnownFor knownFor={knownForByPopularity} />\r\n        </div>\r\n      </main>\r\n    )\r\n  }\r\n}\r\n\r\nexport default PersonPage\r\n","function NotFoundPage() {\r\n  return (\r\n    <main className=\"bg-gray-600 h-screen p-6\">\r\n      <div className=\"mx-auto pt-4\">\r\n        <h2 className=\"font-bold text-center text-2xl text-red-500\">404: Page Not Found</h2>\r\n      </div>\r\n    </main>\r\n  )\r\n}\r\n\r\nexport default NotFoundPage\r\n","// REACT COMPONENTS\r\nimport { useState, useEffect } from 'react'\r\n\r\n// COMPONENTS\r\nimport Loading from '../components/Loading'\r\nimport MovieCard from '../components/MovieCard'\r\nimport TvCard from '../components/TvCard'\r\nimport PersonCard from '../components/PersonCard'\r\n\r\n// API\r\nimport { fetchMultiSearch } from '../services/api'\r\n\r\nfunction SearchResultsPage({ match }) {\r\n\r\n  // Get search query from url\r\n  const searchQuery = match.params.name\r\n\r\n  // State\r\n  const [searchResults, setSearchResults] = useState([])\r\n  const [isLoaded, setIsLoaded] = useState(false)\r\n\r\n  // UseEffect\r\n  useEffect(() => {\r\n    const getSearchResults = async () => {\r\n      const search = await fetchMultiSearch(searchQuery)\r\n      setSearchResults(search)\r\n      setIsLoaded(true)\r\n    }\r\n    getSearchResults()\r\n  }, [searchQuery])\r\n\r\n  if(!isLoaded){\r\n    return (\r\n      <Loading />\r\n    )\r\n  // Render if movie info is loaded\r\n  } else {\r\n    const results = searchResults.results;\r\n    return (\r\n      <main className=\"bg-gray-600 min-h-screen\">\r\n        <div className=\"max-w-3xl mx-auto\">\r\n          <h2 className=\"text-2xl font-bold text-green-500 text-center p-2\">Search Results for: {searchQuery}</h2>\r\n\r\n          {results.length === 0 ? (\r\n            <div className=\"p-4\">\r\n              <h3 className=\"text-xl font-bold text-green-500 text-center p-2\">Sorry. No results were found.</h3>\r\n            </div>\r\n          ) : (\r\n            <div className=\"p-2 flex flex-wrap justify-center\">\r\n              {/* TODO: Learn more about using conditionals in map (without return true I get a warning) */}\r\n              {results.map(media => {\r\n                if(media.media_type === \"movie\"){\r\n                  return <MovieCard key={media.id} media={media} />\r\n                } else if(media.media_type === \"tv\"){\r\n                  return <TvCard key={media.id} media={media} />\r\n                } else if(media.media_type === \"person\"){\r\n                  return <PersonCard key={media.id} media={media} />\r\n                }\r\n                return true;\r\n              })}\r\n            </div>\r\n          )}\r\n        </div>\r\n      </main>\r\n    )\r\n  }\r\n}\r\n\r\nexport default SearchResultsPage\r\n","// Routing\r\nimport {\r\n  BrowserRouter as Router,\r\n  Route,\r\n  Switch,\r\n} from 'react-router-dom';\r\n\r\n// Pages\r\nimport Header from './components/Header';\r\nimport HomePage from './pages/HomePage';\r\nimport MoviePage from './pages/MoviePage';\r\nimport TVPage from './pages/TVPage';\r\nimport PersonPage from './pages/PersonPage';\r\nimport NotFoundPage from './pages/NotFoundPage';\r\nimport SearchResultsPage from './pages/SearchResultsPage';\r\n\r\nfunction App() {\r\n  return (\r\n    <Router>\r\n      <Header />\r\n      <Switch>\r\n        <Route path=\"/\" component={HomePage} exact />\r\n        <Route path=\"/movie/:name\" component={MoviePage} />\r\n        <Route path=\"/tv/:name\" component={TVPage} />\r\n        <Route path=\"/person/:name\" component={PersonPage} />\r\n        <Route path=\"/search/:name\" component={SearchResultsPage} />\r\n        <Route component={NotFoundPage} />\r\n      </Switch>\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n    <App />,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}